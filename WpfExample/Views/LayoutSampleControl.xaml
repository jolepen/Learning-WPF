<UserControl x:Class="WpfExample.Views.LayoutSampleControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:helper="clr-namespace:WpfExample.Helpers"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <helper:SizeConverter x:Key="SizeConverter"/>
        <Style TargetType="Button">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Width="40" 
                                    Height="40">
                                <Grid>
                                    <Grid Background="{TemplateBinding Foreground}" 
                                          Visibility="Collapsed" 
                                          Name="nullBlock" 
                                          Width="{Binding ElementName=border, Path=Width, Converter={StaticResource SizeConverter}, ConverterParameter=0.7}" 
                                          Height="{Binding ElementName=border, Path=Height, Converter={StaticResource SizeConverter}, ConverterParameter=0.7}"/>
                                    <Path Stretch="Uniform" 
                                          Width="{Binding ElementName=border, Path=Width, Converter={StaticResource SizeConverter}, ConverterParameter=0.8}" 
                                          Height="{Binding ElementName=border, Path=Height, Converter={StaticResource SizeConverter}, ConverterParameter=0.8}"
                                          Fill="{TemplateBinding Foreground}" 
                                          Name="eliCheck" 
                                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z" 
                                          Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                            <TextBlock Margin="5 0 0 5"
                                       VerticalAlignment="Center"
                                       Foreground="Black"
                                       Text="{TemplateBinding Content}"
                                       FontSize="{TemplateBinding FontSize}"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF9C9E9F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter TargetName="eliCheck" Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="eliCheck" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="nullBlock" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StaticResourceButton" TargetType="Button">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="white"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="DynamicResourceButton" TargetType="Button" BasedOn="{StaticResource StaticResourceButton}">
            <Setter Property="Background" Value="Pink"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
    </UserControl.Resources>

    <TabControl>
        <TabItem Header="Grid">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Background="Transparent">
                    <WrapPanel HorizontalAlignment="Left" Orientation="Vertical" VerticalAlignment="Top">
                        <TextBlock Text="Sample TextBlock"/>
                        <TextBox Style="{DynamicResource TextBoxStyle1}" Text="Sample TextBox" Background="Transparent"/>
                        <Label Content="Label"/>
                        <CheckBox Content="CheckBox"
                              Foreground="Red"
                              Background="Gainsboro"
                              BorderBrush="PaleVioletRed"
                              IsThreeState="True" 
                              FontSize="40">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                        <ComboBox>
                            <ComboBoxItem Content="Combo1"/>
                            <ComboBoxItem Content="Combo2"/>
                            <ComboBoxItem Content="Combo3"/>
                            <ComboBoxItem Content="Combo4"/>
                        </ComboBox>
                    </WrapPanel>
                </Border>
                <Border Grid.Column="1" Background="YellowGreen"/>
                <Rectangle Grid.Row="1" Fill="LightPink"/>
                <Rectangle Grid.Row="1" Grid.Column="1" Fill="DarkOrange"/>
            </Grid>
        </TabItem>
        <TabItem Header="StackPanel">
            <StackPanel Orientation="Horizontal">
                <Button Content="Static Resource Button" Style="{StaticResource StaticResourceButton}"/>
                <Button Content="Dynamic Resource Button" Style="{DynamicResource DynamicResourceButton}"/>
                <Button Content="Other Button" Margin="5" Width="160"/>
                <Button Content="Other Button" Margin="5" Width="160"/>
            </StackPanel>
        </TabItem>
        <TabItem Header="WrapPanel">
            <WrapPanel Orientation="Vertical">
                <Button Content="Button1" Height="200"/>
                <Button Content="Button2" Height="200"/>
                <Button Content="Button3" Height="200"/>
                <Button Content="Button4" Height="200"/>
            </WrapPanel>
        </TabItem>
        <TabItem Header="DockPanel">
            <DockPanel>
                <Rectangle Fill="Red" Height="80" DockPanel.Dock="Top"/>
                <Rectangle Fill="Orange" Width="80"  DockPanel.Dock="Left"/>
                <Rectangle Fill="Yellow" Width="80"  DockPanel.Dock="Right"/>
                <Rectangle Fill="Blue" Height="80" DockPanel.Dock="Bottom"/>
                <Rectangle Fill="DarkCyan" Height="80" DockPanel.Dock="Top"/>
                <Rectangle Fill="PaleVioletRed" />
            </DockPanel>
        </TabItem>
        <TabItem Header="Canvas">
            <Canvas>
                <Button 
                    Background="Red"/>
                <Button 
                    Canvas.Right="100"
                    Background="Yellow"/>
                <Button
                    Canvas.Right="100"
                    Canvas.Top="100"
                    Background="Pink"/>
                <Button
                    Canvas.Top="100"
                    Background="Blue"/>
                <Button
                    Canvas.Bottom="100"
                    Background="Purple"/>
                <Button
                    Canvas.Bottom="100"
                    Canvas.Right="100"
                    Background="Orange"/>
                <Button
                    Canvas.Left="100"
                    Background="Green"/>
                <Button
                    Canvas.Left="100"
                    Canvas.Top="100"
                    Background="SkyBlue"/>
                <Button
                    Canvas.Left="100"
                    Canvas.Bottom="100"
                    Background="HotPink"/>
            </Canvas>
        </TabItem>
    </TabControl>
</UserControl>
