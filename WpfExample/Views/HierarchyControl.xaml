<UserControl x:Class="WpfExample.Views.HierarchyControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfExample.Views"
             xmlns:image="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Style x:Key="CustomHierarchyToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="image"
                                               Grid.Column="0" 
                                               Margin="10 2 10 0">
                                    <Image.Source>
                                        <DrawingImage>
                                            <DrawingImage.Drawing>
                                                <GeometryDrawing Brush="#000000" 
                                                                 Geometry="M12,10A2,2 0 0,0 10,12C10,13.11 10.9,14 12,14C13.11,14 14,13.11 14,12A2,2 0 0,0 12,10Z" />
                                            </DrawingImage.Drawing>
                                        </DrawingImage>
                                    </Image.Source>
                                </Image>
                                <ContentPresenter Grid.Column="1" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFB8ECEF"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Silver"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF0078D7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomTreeViewItem" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Border x:Name="border" 
                                Padding="0 0 0 0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="treeItemBorder">
                                    <Grid x:Name="grid">
                                        <ToggleButton x:Name="button" 
                                                Content="{TemplateBinding Header}" 
                                                FontSize="{TemplateBinding FontSize}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                HorizontalContentAlignment="Left"
                                                Style="{StaticResource CustomHierarchyToggleButtonStyle}"/>
                                    </Grid>
                                </Border>
                                <!--만약 treeViewItem의 자식 노드를 출력시키기 위해서는 ItemPresenter를 활성화 해주어야 한다.-->
                                <!--<ItemsPresenter/>-->
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--treeViewItem 내에 마우스 캡쳐가 발생할경우 Selected 이벤트를 발생시키기 위한 Trigger-->
                            <Trigger Property="IsMouseCaptureWithin" Value="True">
                                <Setter Property="IsSelected" Value="True"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Text="조직도" FontSize="23" FontWeight="Bold" Padding="5"/>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="60*"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Grid.Column="0">
                    <TreeView x:Name="treeView" BorderBrush="Transparent">
                        <TreeViewItem x:Name="rootTreeViewItem" Header="Let's Learning Wpf" FontSize="13" FontWeight="Bold"/>
                    </TreeView>
                </StackPanel>
            </ScrollViewer>
            <GridSplitter Grid.Column="1"
                          Background="LightGray" 
                          ShowsPreview="True"
                          Width="3"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Stretch"
           />
            <ListBox x:Name="listBox" Grid.Column="2" BorderBrush="Transparent">
                <!--
                1. Style을 통한 접근 
                -->
                <ListBox.Style>
                    <Style TargetType="{x:Type ListBox}">
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Name}" Margin="0 0 10 0" FontSize="14"/>
                                        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Status}" Margin="0 2 0 0" FontSize="10" Foreground="DarkGray"/>
                                        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Text="{Binding Location}" Margin="0 4 0 6" FontSize="13"/>
                                    </Grid>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBox}">
                                    <ItemsPresenter/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Style>
                <!-- 
                2. Template를 통한 접근
                -->
                <!--
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Name}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                -->

                <!-- 
                ListBoxItem은 Content Control로 이루어져 있기때문에 ContentTemplate을 사용한다.
                <ListBoxItem Content="Sample List Box Item">
                    <ListBoxItem.ContentTemplate>
                        <DataTemplate>
                            <TextBlock Text="{TemplateBinding Content}"/>
                        </DataTemplate>
                    </ListBoxItem.ContentTemplate>
                </ListBoxItem>
                -->
            </ListBox>
        </Grid>
    </Grid>
</UserControl>
